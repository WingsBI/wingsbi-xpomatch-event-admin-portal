# 1. Build stage
FROM node:18-alpine AS builder
WORKDIR /app

# Install dependencies
COPY package.json package-lock.json* yarn.lock* ./
RUN \
  if [ -f yarn.lock ]; then yarn install --frozen-lockfile; \
  else npm ci; \
  fi

# Copy source code
COPY . .

# Build the app with .env.test (Next.js will pick up .env.test automatically)
RUN npm run build

# 2. Production stage
FROM node:18-alpine AS runner
WORKDIR /app

# Create a non-root user for security
RUN addgroup --system --gid 1001 nodejs
RUN adduser --system --uid 1001 nextjs

# Only copy necessary files for production
COPY --from=builder /app/package.json ./
COPY --from=builder /app/node_modules ./node_modules
COPY --from=builder /app/.next ./.next

# Copy public directory if it exists
COPY --from=builder /app/public ./public 2>/dev/null || echo "No public directory found"

# Copy next config file
COPY --from=builder /app/next.config.js* ./

# Copy ONLY the .env.test file (keep files separate)
COPY --from=builder /app/.env.test ./

# Set correct permissions
RUN chown -R nextjs:nodejs /app
USER nextjs

# Expose port
EXPOSE 3000

# Set environment to use .env.test
ENV NODE_ENV=test

# Start the app with .env.test
CMD ["sh", "-c", "cp .env.test .env && npm start"]